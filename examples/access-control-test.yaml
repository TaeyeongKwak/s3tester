---
# S3 Tester - 권한 및 액세스 제어 테스트 설정
# 
# Environment Variables (optional overrides):
#   S3TESTER_ENDPOINT_URL: S3 endpoint URL (default: http://localhost:9000)
#   S3TESTER_REGION: AWS region (default: us-east-1)

config:
  endpoint_url: "${S3TESTER_ENDPOINT_URL:-http://localhost:9000}"  # MinIO 또는 다른 S3 호환 서비스
  region: "${S3TESTER_REGION:-us-east-1}"
  path_style: true  # Path style URL 사용 (MinIO에 권장)
  credentials:
    - name: "minio-admin"
      access_key: "PZMCf6oqkmeBEugp0WCl"  # 기본 MinIO 자격 증명
      secret_key: "FZSe5aUOrKHS7PPZhFNYwI7hOxZszywo8jPIOUzo"  # 적절히 변경하세요
    - name: "limited-user"
      access_key: "3JUetPq8rlYO0tarpmSS"  # MinIO에서 생성한 제한된 권한의 사용자
      secret_key: "hYiBme1PijgfNb0uT9YrcdzsknHK3J1gj5pQL9jj"  # 실제 사용자 자격 증명으로 변경하세요

test_cases:
  parallel: false
  groups:
    - name: "bucket-policy-permissions-test"
      credential: "minio-admin"
      before_test:
        - operation: "CreateBucket"
          parameters:
            bucket: "policy-test-bucket"
          expected_result:
            success: true
        
        - operation: "PutObject"
          parameters:
            bucket: "policy-test-bucket"
            key: "restricted-object.txt"
            body: "이 객체는 정책으로 제한됩니다."
          expected_result:
            success: true
        
        # 읽기 전용 정책 설정
        - operation: "PutBucketPolicy"
          parameters:
            bucket: "policy-test-bucket"
            policy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {"AWS": ["*"]},
                    "Action": ["s3:GetObject"],
                    "Resource": ["arn:aws:s3:::policy-test-bucket/*"]
                  },
                  {
                    "Effect": "Deny",
                    "Principal": {"AWS": ["*"]},
                    "Action": ["s3:PutObject", "s3:DeleteObject"],
                    "Resource": ["arn:aws:s3:::policy-test-bucket/*"]
                  }
                ]
              }
          expected_result:
            success: true
      
      test:
        # 제한된 사용자가 객체 읽기 (허용됨)
        - operation: "GetObject"
          credential: "limited-user"
          parameters:
            bucket: "policy-test-bucket"
            key: "restricted-object.txt"
          expected_result:
            success: true
        
        # 제한된 사용자가 객체 쓰기 (거부됨)
        - operation: "PutObject"
          credential: "limited-user"
          parameters:
            bucket: "policy-test-bucket"
            key: "new-object.txt"
            body: "이 작업은 실패해야 합니다."
          expected_result:
            success: false
            error_code: "AccessDenied"
        
        # 제한된 사용자가 객체 삭제 (거부됨)
        - operation: "DeleteObject"
          credential: "limited-user"
          parameters:
            bucket: "policy-test-bucket"
            key: "restricted-object.txt"
          expected_result:
            success: false
            error_code: "AccessDenied"
        
        # 관리자 사용자는 모든 작업 가능
        - operation: "PutObject"
          credential: "minio-admin"
          parameters:
            bucket: "policy-test-bucket"
            key: "admin-created.txt"
            body: "관리자는 모든 작업이 가능합니다."
          expected_result:
            success: true
      
      after_test:
        - operation: "DeleteObject"
          parameters:
            bucket: "policy-test-bucket"
            key: "restricted-object.txt"
          expected_result:
            success: true
        
        - operation: "DeleteObject"
          parameters:
            bucket: "policy-test-bucket"
            key: "admin-created.txt"
          expected_result:
            success: true
        
        - operation: "DeleteBucketPolicy"
          parameters:
            bucket: "policy-test-bucket"
          expected_result:
            success: true
        
        - operation: "DeleteBucket"
          parameters:
            bucket: "policy-test-bucket"
          expected_result:
            success: true
